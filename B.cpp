#include <cstdint>
#include <iostream>
#include <vector>

/*

# B. Количество единиц в двоичной записи

## Легенда
Вам дано число x = 0, а также n операций, которые необходимо над ним совершить. Операции бывают 2-х
типов:
- «+ S» — прибавить к числу x число 2^S;
- «- S» — отнять от числа x число 2^S.
После выполнения каждой операции необходимо вывести количество единиц в двоичной записи числа x.

## Формат ввода
Первая строка входных данных содержит целое число n (1 ≤ n ≤ 10^5) — количество операций.
Следующие n строк описывают операции.
Каждая операция задается символом «+» или «-» и числом S (0 ≤ S ≤ 10^5), записанными через пробел.
Гарантируется, что после выполнения любого количества заданных операций x остается неотрицательным.

## Формат вывода
Для каждой из n операций в отдельной строке выведите единственное число — количество единиц в
двоичной записи числа x после выполнения данной операции.

## Описание решения
TBD

## Асимптотика решения
Время: TBD
Память: TBD

*/

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);

  uint32_t n = 0;
  std::cin >> n;

  std::vector<int8_t> bits(200000, 0);
  uint32_t ones = 0;

  std::string output;

  while (n-- > 0) {
    char op = 0;
    std::cin >> op;

    uint32_t S = 0;
    std::cin >> S;

    if (op == '+') {
      bits[S]++;

      while (bits[S] == 2) {
        bits[S] = 0;
        ones--;

        S++;
        bits[S]++;
      }

      ones++;
    } else {
      bits[S]--;

      while (bits[S] == -1) {
        bits[S] = 1;
        ones++;

        S++;
        bits[S]--;
      }

      ones--;
    }

    output += std::to_string(ones) + '\n';
  }

  std::cout << output;

  return 0;
}
